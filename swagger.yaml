swagger: '2.0'
info:
  version: '1.0'
  title: "Documentazione API"

host: wave-edu-server.onrender.com
basePath: /api
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /auth/link:
    post:
      tags:
        - Authentication
      summary: Create a link to connect
      description: Questa API consente a un'applicazione client di generare un collegamento univoco che permette all’utente di collegarsi all’applicazione per la prima volta. L'API richiede un livello di autorizzazione appropriato per garantire che solo gli utenti autorizzati possano creare collegamenti. Una volta ricevuta una richiesta POST con i dati necessari, l'API genera un link unico, che può essere condiviso con l’utente desiderato, e restituisce un token che può essere utilizzato per accedere alle risorse protette nelle richieste successive.
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              email:
                type: string
      security:
        - Admin: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              token:
                type: string
                
  /auth/login:
    get:
      tags:
        - Authentication
      summary: Login
      description: Questa API consente a un'applicazione client di autenticare un utente e di concedergli l'accesso alle risorse protette di un sistema. L'API richiede una richiesta GET con il token dell’utente. Una volta che gli utenti avranno inserito il token, verranno collegati all’applicazione. Questa tipologia di login semplifica e velocizza il metodo di autenticazione per l’utente.
      parameters:
      - name: body
        in: body
        schema:
            type: object
            properties:
              token:
                type: string
                description: Required
      security:
        - Admin: []
      responses:
        "200":
          description: OK
        
  /auth/logout:
    delete:
      tags:
        - Authentication
      summary: logout
      description: Questa API consente a un'applicazione client di invalidare la sessione di un utente e di revocare il suo accesso alle risorse protette di un sistema. L'API richiede in genere una richiesta autenticata con il livello di autorizzazione appropriato per garantire che solo gli utenti autorizzati possano effettuare il logout. Quando riceve una richiesta DELETE, l'API invalida la sessione e restituisce un messaggio di successo che indica che l'utente è stato disconnesso con successo.
      security:
        - Admin: []
      responses:
        "200":
          description: OK
  /user:
    post:
      tags:
        - User
      summary: Create a new user
      description: L'API "Create a new user" è un'interfaccia basata sul web che consente agli utenti di creare nuovi account in un sistema o in un'applicazione. Questa API può essere utilizzata per registrare nuovi utenti e consentire l'accesso a varie funzionalità o servizi offerti dal sistema. Per utilizzare l'API, gli utenti possono fornire le informazioni necessarie per la creazione di un nuovo account, come nome utente, indirizzo e-mail e ruolo. L'API invierà quindi queste informazioni al server, che creerà un nuovo account utente e memorizzerà i dati necessari nel sistema. Una volta creato l'account, l'utente può effettuare il login e accedere alle funzionalità e ai servizi del sistema.
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              email:
                type: string
              name:
                type: string
              role:
                type: string
      security:
        - Admin: []
      responses:
        "201":
          description: Successfully Created
          schema:
            type: object
            properties:
              id:
                type: string
              email:
                type: string
              name:
                type: string
              role:
                type: string
    get:
      tags:
        - User
      summary: Get all users
      description: L'API "Get all user" consente a un'applicazione client di recuperare un elenco di tutti gli utenti memorizzati in un database o in un sistema. Questa API restituisce in genere un insieme di oggetti utente, ciascuno contenente informazioni quali l'ID utente, il nome utente, l'indirizzo e-mail e altri dettagli rilevanti dell'utente. Per utilizzare questa API, l'applicazione client invia una richiesta GET all'endpoint dell'API, che restituisce l'elenco degli utenti in formato JSON. Tuttavia, è importante garantire l'adozione di misure di sicurezza adeguate per proteggere le informazioni sensibili degli utenti e impedire l'accesso non autorizzato all'API.
      security:
        - Admin: []
      responses:
        "200":
          description: Successful Response
          schema:
            type: object
            properties:
              id:
                type: string
              email:
                type: string
              name:
                type: string
              role:
                type: string

    delete:
      tags:
        - User
      summary: Delete all users
      description: L'API "Delete all user" è un'interfaccia basata sul Web che consente agli amministratori di sistema o agli utenti autorizzati di eliminare tutti i dati degli utenti da un database o da un server. Questa API può essere utilizzata per rimuovere tutti gli account utente e i dati associati in situazioni in cui è necessario. Per utilizzare l'API, gli utenti con le autorizzazioni appropriate possono inviare una richiesta al server indicando che tutti i dati degli utenti devono essere eliminati. L'API elaborerà la richiesta ed eliminerà tutti i dati dell'utente dal sistema.
      security:
        - Admin: []
      responses:
        "204":
          description: No Content
          
  /user/:{id}:
    get:
      tags:
        - User
      summary: Get user by ID
      description: Questa API consente a un'applicazione client di recuperare le informazioni di un utente specifico in base al suo identificatore unico (ID) memorizzato in un database o in un sistema. L'API richiede in genere una richiesta autenticata con il livello di autorizzazione appropriato per garantire che solo gli utenti autorizzati possano recuperare le informazioni sull'utente. Una volta ricevuta una richiesta GET con un ID utente valido, l'API restituisce un oggetto utente contenente informazioni quali il nome utente, l'indirizzo e-mail e altri dettagli rilevanti.
      parameters:
        - name: id
          in: path
          description: ID of user to retrieve
          required: true
          type: string
      security:
        - Admin: []
      responses:
        "200":
          description: user found successfully
          schema:
            type: object
            properties:
              id:
                type: string
              email:
                type: string
              name:
                type: string
              role:
                type: string
    put:
      tags:
        - User
      summary: Update user by ID
      description: Questa API consente a un'applicazione client di aggiornare le informazioni di un utente specifico in base al suo identificativo unico (ID) memorizzato in un database o in un sistema. L'API richiede in genere una richiesta autenticata con il livello di autorizzazione appropriato per garantire che solo gli utenti autorizzati possano aggiornare le informazioni dell'utente. Quando riceve una richiesta PUT o PATCH con un ID utente valido e i dati dell'utente aggiornati, l'API modifica il record dell'utente corrispondente nel sistema e restituisce un messaggio di successo che indica che l'utente è stato aggiornato con successo.
      parameters:
        - name: id
          in: path
          description: ID of user to update
          required: true
          type: string
        - name: body
          in: body
          schema:
            type: object
            properties:
              email:
                type: string
              name:
                type: string
              role:
                type: string
      security:
        - Admin: []
      responses:
        "200":
          description: user updated successfully
          schema:
            type: object
            properties:
              id:
                type: string
              email:
                type: string
              name:
                type: string
              role:
                type: string
    delete:
      tags:
        - User
      summary: Delete user by ID
      description: Questa API consente a un'applicazione client di eliminare l'account di un utente in base al suo identificatore unico (ID) memorizzato in un database o in un sistema. L'API richiede in genere una richiesta autenticata con il livello di autorizzazione appropriato per garantire che solo gli utenti autorizzati possano eliminare gli account utente. Quando riceve una richiesta di DELETE con un ID utente valido, l'API rimuove il record dell'utente corrispondente dal sistema e restituisce un messaggio di successo che indica che l'utente è stato eliminato con successo.
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          type: string
      security:
        - Admin: []
      responses:
        "204":
          description: user removed successfully
          schema:
            type: object
            properties:
              id:
                type: string
              email:
                type: string
              name:
                type: string
              role:
                type: string  

  /chat:
    post:
      tags:
        - Chat
      summary: Create a new chat
      description: L'API "Create a new chat" fornisce una serie di endpoint che consentono agli utenti di avviare nuove conversazioni e di unirsi a quelle esistenti. Gli insegnanti possono inviare richieste al server con i parametri appropriati e l'API creerà quindi una nuova chat room e restituirà un identificatore univoco che potrà essere utilizzato per fare riferimento alla chat nelle richieste future. Questa API supporta la messaggistica in tempo reale ed è progettata per essere scalabile ed efficiente, consentendo a un gran numero di utenti di partecipare alle chat simultaneamente. La sicurezza è una priorità assoluta per questa API, che include meccanismi di autenticazione e autorizzazione per garantire che solo gli utenti autorizzati possano accedere e interagire con la creazione di nuove chat.
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              ownerId:
                type: string
              name:
                type: string
      security:
        - teacher: []
      responses:
        "201":
          description: Successfully Created
          schema:
            type: object
            properties:
              id chat:
                type: string
              name:
                type: string
              message:
                type: array
              users:
                type: array
    get:
      tags:
        - Chat
      summary: Get all chats
      description: L'API "Get all chats" è uno strumento che consente agli utenti di recuperare informazioni su tutte le chat esistenti in un'applicazione. Questa API fornisce una serie di endpoint che consentono agli utenti di interrogare il server per ottenere un elenco di tutte le chat disponibili e i relativi dettagli, come il nome della chat, i partecipanti e la cronologia dei messaggi. Per utilizzare l'API, gli sviluppatori possono inviare richieste al server con i parametri appropriati, come le opzioni di filtraggio per limitare i risultati a chat specifiche o le opzioni di ordinamento per ordinare le chat in base a vari criteri. L'API restituirà quindi un oggetto JSON contenente l'elenco delle chat e i relativi metadati. La sicurezza è una priorità assoluta per questa API, che include meccanismi di autenticazione e autorizzazione per garantire che solo gli utenti autorizzati possano accedere ai dati delle chat. 
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
               id owner:
                 type: string
      security:
        - teacher: []
      responses:
        "200":
          description: Chat Acquired Successfully 
          schema:
            type: object
            properties:
              id chat:
                type: string
              name:
                type: string
              message:
                type: array
              users:
                type: array
    delete:
      tags:
        - Chat
      summary: Delete all chats
      description: L'API "Delete all chats" è uno strumento che consente agli utenti di rimuovere tutte le chat esistenti in un'applicazione. Questa API fornisce una serie di endpoint che consentono agli utenti di inviare richieste al server per eliminare tutte le chat e i dati ad esse associati, compresi messaggi, partecipanti. Per utilizzare l'API, gli utenti possono inviare richieste al server con i parametri appropriati, come la conferma dell'azione di cancellazione. Una volta elaborata la richiesta, l'API eliminerà tutte le chat e i relativi dati e restituirà un messaggio di successo. La sicurezza è una priorità assoluta per questa API, che include meccanismi di autenticazione e autorizzazione per garantire che solo gli utenti autorizzati possano accedere ed eliminare i dati delle chat.  
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
               Confirm:
                 type: string
      security:
        - teacher: []
      responses:
        "204":
          description: All chats removed
    
  /chat/:{id}:
     get:
      tags:
        - Chat
      summary: Get chats by ID
      description: L'API "Get chats by ID" è uno strumento che consente agli utenti di recuperare informazioni su una specifica chat in un'applicazione. Questa API fornisce una serie di endpoint che consentono agli utenti di interrogare il server per una chat room in base al suo identificatore univoco e di restituire i dati della chat corrispondenti, come il nome della chat, i partecipanti e la cronologia dei messaggi. Per utilizzare quest’API, gli utenti possono inviare richieste al server con i parametri appropriati, come l'ID della chat. L'API restituirà quindi un oggetto JSON contenente i dati della chat associati all'ID specificato. La sicurezza è una priorità assoluta per questa API, che include meccanismi di autenticazione e autorizzazione per garantire che solo gli utenti autorizzati possano accedere ai dati delle chat.
      parameters:
        - name: id
          in: path
          description: ID of the chat
          required: true
          type: string
      security:
        - teacher: []
      responses:
        "200":
          description: Chats Acquired Successfully 
          schema:
            type: object
            properties:
              name:
                type: string
              message:
                type: array
              users:
                type: array
     put:
      tags:
        - Chat
      summary: Update chat by ID
      description: L'API "Update chats by ID" è uno strumento che consente agli utenti di modificare le chat esistenti in un'applicazione. Questa API fornisce una serie di endpoint che consentono agli utenti di inviare richieste al server per aggiornare specifiche chat e i dati ad esse associati, come il nome della chat. Per utilizzare l'API, gli utenti possono inviare richieste al server con i parametri appropriati, come l'ID della chat e i dati aggiornati della chat. L'API aggiornerà quindi la chat con le nuove informazioni e restituirà un messaggio di successo. La sicurezza è una priorità assoluta per questa API, che include meccanismi di autenticazione e autorizzazione per garantire che solo gli utenti autorizzati possano accedere e modificare i dati delle chat.
      parameters:
        - name: id
          in: path
          description: ID of chat to update
          required: true
          type: string
        - name: body
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
      security:
        - teacher: []
      responses:
        "200":
          description: chat updated successfully
          schema:
            type: object
            properties:
              id chat:
                type: string
              name:
                type: string
     delete:
      tags:
        - Chat
      summary: Delete chat by ID
      description: L'API "Delete chats by ID" è uno strumento che consente agli utenti di rimuovere specifiche chat in un'applicazione. Questa API fornisce una serie di endpoint che consentono agli utenti di inviare richieste al server per eliminare una chat e i dati ad essa associati, compresi messaggi, partecipanti. Per utilizzare l'API, gli utenti possono inviare richieste al server con i parametri appropriati, come l'ID della chat e la conferma dell'azione di cancellazione. Una volta elaborata la richiesta, l'API eliminerà la chat specificata e i suoi dati e restituirà un messaggio di successo. La sicurezza è una priorità assoluta per questa API, che include meccanismi di autenticazione e autorizzazione per garantire che solo gli utenti autorizzati possano accedere ed eliminare i dati delle chat.
      parameters:
        - name: id
          in: path
          description: ID of chat to delete
          required: true
          type: string
      security:
        - teacher: []
      responses:
        "204":
          description: chat removed successfully
          schema:
            type: object
            properties:
              id chat:
                type: string
              name:
                type: string
              message:
                type: array
              users:
                type: array 
  
  /chat/:{chatId}/participant/:{userId}:
    post:
      tags:
        - Chat
      summary: Add a new partecipant to a chat
      description: Questa API consente a un'applicazione client di aggiungere un nuovo partecipante a una chat o a una conversazione esistente. L'API richiede tipicamente una richiesta autenticata con il livello di autorizzazione appropriato per garantire che solo gli utenti autorizzati possano aggiungere partecipanti a una chat. Una volta ricevuta una richiesta POST con i dati necessari (come l'ID della chat room e l'ID del partecipante), l'API aggiunge il nuovo partecipante alla chat e restituisce un messaggio di successo che indica che l'aggiunta del partecipante è avvenuta con successo.
      parameters:
        - name: chatId
          in: path
          description: ID of chat
          required: true
          type: string
        - name: userId
          in: path
          description: ID of user
          required: true
          type: string
      security:
        - teacher: []
      responses:
        "201":
          description: Participant added to chat
  
    delete:
      tags:
        - Chat
      summary: Remove a partecipant from a chat
      description: Questa API consente a un'applicazione client di rimuovere un partecipante da una chat o da una conversazione esistente. L'API richiede tipicamente una richiesta autenticata con il livello di autorizzazione appropriato per garantire che solo gli utenti autorizzati possano rimuovere i partecipanti da una chat. Una volta ricevuta una richiesta DELETE con i dati necessari (come l'ID della chat room e l'ID del partecipante), l'API rimuove il partecipante dalla chat e restituisce un messaggio di successo che indica che la rimozione del partecipante è avvenuta con successo.
      parameters:
        - name: chatId
          in: path
          description: ID of chat
          required: true
          type: string
        - name: userId
          in: path
          description: ID of user
          required: true
          type: string
      security:
        - teacher: []
      responses:
        "201":
          description: Participant removed from chat

  /messages/{chatId}:
     get:
      tags:
        - Message
      summary: Get all message
      description: Questo endpoint può essere utilizzato per recuperare tutti i messaggi di una particolare conversazione o chat o per recuperare i messaggi di più conversazioni o chat. La risposta conterrà un elenco di messaggi, ciascuno dei quali contiene informazioni quali il contenuto del messaggio, la data e l'ora e qualsiasi altro metadato pertinente.
      parameters:
        - name: chatId
          in: path
          description: ID of chat
          required: true
          type: string
      security:
        - teacher: []
      responses:
        200:
          description: Messages Acquired Successfully 
          schema:
            type: object
            properties:
              id:
                type: string
              messageType:
                type: string
                description: Si può avere diversi tipi di messaggio tra cui LEZIONE, COMPITO, SONDAGGIO, EVENTO e COMUNICAZIONE
              createdAt:
                type: string
              updatedAt:
                type: string
              Chat:
                type: string
              chatId:
                type: string
              ownerId:
                type: string
              content:
                type: string
                description: Può essere sia un semplice testo che un array, inoltre il content, in determinati casi, oltre al type string contiene il type DateTime per la data

  /message:
     post:
      tags:
        - Message
      summary: Create a new message
      description: Questo endpoint API crea un nuovo messaggio e lo aggiunge a una conversazione o a una chat room specificata. La richiesta conterrà il contenuto del messaggio, il mittente, l’Id della chat e qualsiasi altro metadato rilevante associato al messaggio. La risposta conterrà il messaggio appena creato, compreso il suo ID univoco.
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              chatId:
                type: string
              ownerId:
                type: string
              messageType:
                type: string
      security:
        - teacher: []
      responses:
        "201":
          description: New message created
          schema:
            type: object
            properties:
              id:
                type: string
              messageType:
                type: string
                description: Si può avere diversi tipi di messaggio tra cui LEZIONE, COMPITO, SONDAGGIO, EVENTO e COMUNICAZIONE
              createdAt:
                type: string
              updatedAt:
                type: string
              Chat:
                type: string
              chatId:
                type: string
              ownerId:
                type: string
              content:
                type: string
                description: Può essere sia un semplice testo che un array, inoltre il content, in determinati casi, oltre al type string contiene il type DateTime per la data

     delete:
      tags:
        - Message
      summary: Delete all messages
      description: Questo endpoint può essere utilizzato per cancellare tutti i messaggi da una conversazione o una chat o per eliminare i messaggi da più conversazioni o chat room inserendo l’Id specifico della chat.
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              ChatId:
                type: string
              Confirm:
                type: string
      security:
        - teacher: []
      responses:
        "204":
          description: All messages removed
          
  /message/{id}:
     put:
      tags:
        - Message
      summary: Update message by ID
      description: Questo endpoint API aggiorna un messaggio specifico in base al suo Id. La richiesta conterrà l’Id del messaggio, il contenuto aggiornato di quest’ultimo e qualsiasi altro metadato pertinente associato al messaggio. La risposta conterrà il contenuto aggiornato del messaggio e qualsiasi altro metadato pertinente.
      parameters:
        - name: id
          in: path
          description: ID of message to update
          required: true
          type: string
        - name: body
          in: body
          schema:
            type: object
            properties:
              messageType:
                type: string
                description: Si può avere diversi tipi di messaggio tra cui LEZIONE, COMPITO, SONDAGGIO, EVENTO e COMUNICAZIONE
      security:
        - teacher: []
      responses:
        "200":
          description: Message updated successfully
          schema:
            type: object
            properties:
              id:
                type: string
              messageType:
                type: string
                description: Si può avere diversi tipi di messaggio tra cui LEZIONE, COMPITO, SONDAGGIO, EVENTO e COMUNICAZIONE
              createdAt:
                type: string
              updatedAt:
                type: string
              Chat:
                type: string
              chatId:
                type: string
              ownerId:
                type: string
              content:
                type: string
                description: Può essere sia un semplice testo che un array, inoltre il content, in determinati casi, oltre al type string contiene il type DateTime per la data

     get:
      tags:
        - Message
      summary: Get message by ID
      description: Questo endpoint può essere utilizzato per recuperare un singolo messaggio da una conversazione o da una chat room, oppure per recuperare messaggi da più conversazioni o chat room in base al suo ID. La risposta conterrà il contenuto del messaggio e qualsiasi altro metadato pertinente associato al messaggio.
      parameters:
        - name: id
          in: path
          description: ID of message to get
          required: true
          type: string
        - name: body
          in: body
          description: ID of chat
          schema:
            type: object
            properties:
              chatId:
                type: string
      security:
        - teacher: []
      responses:
        "200":
          description: Message Acquired successfully
          schema:
            type: object
            properties:
              id:
                type: string
              messageType:
                type: string
                description: Si può avere diversi tipi di messaggio tra cui LEZIONE, COMPITO, SONDAGGIO, EVENTO e COMUNICAZIONE
              createdAt:
                type: string
              updatedAt:
                type: string
              Chat:
                type: string
              chatId:
                type: string
              ownerId:
                type: string
              content:
                type: string
                description: Può essere sia un semplice testo che un array, inoltre il content, in determinati casi, oltre al type string contiene il type DateTime per la data

     delete:
      tags:
        - Message
      summary: Delete message by ID
      description: Questo endpoint API elimina un messaggio specifico in base al suo Id. Questo endpoint può essere utilizzato per eliminare un singolo messaggio da una conversazione o da una chat room inserendo l’Id della chat e l’Id de messaggio in questione. La risposta conterrà un avviso di avvenuta eliminazione del messaggio.
      parameters:
        - name: id
          in: path
          description: ID of message to delete
          required: true
          type: string
      security:
        - teacher: []
      responses:
        "204":
          description: Message removed successfully
  
  /lastmessage/{chatId}:
     get:
      tags:
        - Message
      summary: Get last message
      description: Questo endpoint API recupera il messaggio più recente da una conversazione o da una chat room specificata. La risposta conterrà il contenuto del messaggio, il mittente e qualsiasi altro metadato pertinente associato al messaggio.
      parameters:
        - name: chatId
          in: path
          description: ID of chat
          required: true
          type: string
      security:
        - teacher: []
      responses:
        200:
          description: Messages Acquired Successfully 
          schema:
            type: object
            properties:
              id:
                type: string
              messageType:
                type: string
                description: Si può avere diversi tipi di messaggio tra cui LEZIONE, COMPITO, SONDAGGIO, EVENTO e COMUNICAZIONE
              createdAt:
                type: string
              updatedAt:
                type: string
              Chat:
                type: string
              chatId:
                type: string
              ownerId:
                type: string
              content:
                type: string
                description: Può essere sia un semplice testo che un array, inoltre il content, in determinati casi, oltre al type string contiene il type DateTime per la data

  /story:
     post:
      tags:
        - Story
      summary: Create a new story
      description: Questo endpoint API crea una nuova storia e la aggiunge a una fonte di dati specificata. La richiesta conterrà il contenuto della storia, l'autore e qualsiasi altro metadato rilevante associato alla storia. La risposta conterrà la nuova storia creata, compreso il suo ID univoco. Questo endpoint può essere usato per aggiungere nuove storie a una fonte di dati. L'API richiede un livello di autorizzazione appropriato per garantire che solo gli utenti autorizzati possano creare le stoies.
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              ownerId:
                type: string
              filePhat:
                type: string              
              delateTime:
                type: object 
      security:
        - teacher: []
      responses:
        "201":
          description: New story created
          schema:
            type: object
            properties:
              id:
                type: string
              ownerId:
                type: string
              filePhat:
                type: string              
              delateTime:
                type: object

  /story/{id}:
     put:
      tags:
        - Story
      summary: Update story by ID
      description: Questo endpoint API aggiorna una storia specifica in base al suo ID. La richiesta conterrà il contenuto aggiornato della storia e qualsiasi altro metadato pertinente associato alla storia, come si suo specifico Id. La risposta conterrà il contenuto aggiornato della storia, l'autore e qualsiasi altro metadato pertinente. L'API richiede un livello di autorizzazione appropriato per garantire che solo gli utenti autorizzati possano aggiornare le stoies.
      parameters:
        - name: id
          in: path
          description: ID of story to update
          required: true
          type: string
        - name: body
          in: body
          schema:
            type: object
            properties:
              filePhat:
                type: string              
              delateTime:
                type: object
      security:
        - teacher: []
      responses:
        "200":
          description: Story updated successfully
          schema:
            type: object
            properties:
              id:
                type: string
              ownerId:
                type: string
              filePhat:
                type: string              
              delateTime:
                type: object
     get:
      tags:
        - Story
      summary: Get story by ID
      description: Questo endpoint può essere usato per recuperare una singola storia da una fonte di dati o per recuperare storie da più fonti di dati in base ai loro ID univoci. La risposta conterrà il contenuto della storia, l'autore, il timestamp e qualsiasi altro metadato rilevante associato alla storia.
      parameters:
        - name: id
          in: path
          description: ID of story to get
          required: true
          type: string
      security:
        - teacher: []
      responses:
        "200":
          description: Story Acquired successfully
          schema:
            type: object
            properties:
              id:
                type: string
              ownerId:
                type: string
              filePhat:
                type: string              
              delateTime:
                type: object
     delete:
      tags:
        - Story
      summary: Delete story by ID
      description: Questo endpoint API elimina una storia specifica in base al suo ID. Questo endpoint può essere utilizzato per eliminare una singola storia o per eliminare più storie in base ai loro ID univoci. L'API richiede un livello di autorizzazione appropriato per garantire che solo gli utenti autorizzati possano eliminare le stoies.
      parameters:
        - name: id
          in: path
          description: ID of story to delete
          required: true
          type: string
      security:
        - teacher: []
      responses:
        "204":
          description: Story removed successfully
  
  /laststory:
     get:
      tags:
        - Story
      summary: Get last story
      description: Questo endpoint può essere utilizzato per recuperare l'ultima storia aggiunta a una fonte di dati, utile per visualizzare le attività recenti o le notifiche agli utenti. La risposta conterrà il contenuto della storia, l'autore e qualsiasi altro metadato rilevante associato alla storia.
      security:
        - teacher: []
      responses:
        "200":
          description: Story Acquired successfully
          schema:
            type: object
            properties:
              id:
                type: string
              ownerId:
                type: string
              filePhat:
                type: string              
              delateTime:
                type: object

  
  
securityDefinitions:
  teacher:
    type: apiKey
    name: Authorization
    in: header
    description: Requires teacher authorization to access this endpoint.
  Admin:
    type: apiKey
    name: Authorization
    in: header
    description: Requires Admin authorization to access this endpoint