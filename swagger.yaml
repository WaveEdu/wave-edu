swagger: '2.0'
info:
  version: '1.0'
  title: "Documentazione API"

host: wave-edu-server.onrender.com
basePath: /api
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /auth/link:
    post:
      tags:
        - Authentication
      summary: Create a link to connect
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              email:
                type: string
      security:
        - Admin: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              token:
                type: string
                
  /auth/login:
    get:
      tags:
        - Authentication
      summary: Login
      parameters:
      - name: body
        in: body
        schema:
            type: object
            properties:
              token:
                type: string
                description: Required
      security:
        - Admin: []
      responses:
        "200":
          description: OK
        
  /auth/logout:
    delete:
      tags:
        - Authentication
      summary: logout
      security:
        - Admin: []
      responses:
        "200":
          description: OK
  /user:
    post:
      tags:
        - User
      summary: Create a new user
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              email:
                type: string
              name:
                type: string
              role:
                type: string
      security:
        - Admin: []
      responses:
        "201":
          description: Successfully Created
          schema:
            type: object
            properties:
              id:
                type: string
              email:
                type: string
              name:
                type: string
              role:
                type: string
    get:
      tags:
        - User
      summary: Get all users
      security:
        - Admin: []
      responses:
        "200":
          description: Successful Response
          schema:
            type: object
            properties:
              id:
                type: string
              email:
                type: string
              name:
                type: string
              role:
                type: string

    delete:
      tags:
        - User
      summary: Delete all users
      security:
        - Admin: []
      responses:
        "204":
          description: No Content
          
  /user/:{id}:
    get:
      tags:
        - User
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          description: ID of user to retrieve
          required: true
          type: string
      security:
        - Admin: []
      responses:
        "200":
          description: user found successfully
          schema:
            type: object
            properties:
              id:
                type: string
              email:
                type: string
              name:
                type: string
              role:
                type: string
    put:
      tags:
        - User
      summary: Update user by ID
      parameters:
        - name: id
          in: path
          description: ID of user to update
          required: true
          type: string
        - name: body
          in: body
          schema:
            type: object
            properties:
              email:
                type: string
              name:
                type: string
              role:
                type: string
      security:
        - Admin: []
      responses:
        "200":
          description: user updated successfully
          schema:
            type: object
            properties:
              id:
                type: string
              email:
                type: string
              name:
                type: string
              role:
                type: string
    delete:
      tags:
        - User
      summary: Delete user by ID
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          type: string
      security:
        - Admin: []
      responses:
        "204":
          description: user removed successfully
          schema:
            type: object
            properties:
              id:
                type: string
              email:
                type: string
              name:
                type: string
              role:
                type: string  

  /chat:
    post:
      tags:
        - Chat
      summary: Create a new chat
      description: L'API "Create a new chat" fornisce una serie di endpoint che consentono agli utenti di avviare nuove conversazioni e di unirsi a quelle esistenti. Gli insegnanti possono inviare richieste al server con i parametri appropriati e l'API creerà quindi una nuova chat room e restituirà un identificatore univoco che potrà essere utilizzato per fare riferimento alla chat nelle richieste future. Questa API supporta la messaggistica in tempo reale ed è progettata per essere scalabile ed efficiente, consentendo a un gran numero di utenti di partecipare alle chat simultaneamente. La sicurezza è una priorità assoluta per questa API, che include meccanismi di autenticazione e autorizzazione per garantire che solo gli utenti autorizzati possano accedere e interagire con la creazione di nuove chat.
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              ownerId:
                type: string
              name:
                type: string
      security:
        - teacher: []
      responses:
        "201":
          description: Successfully Created
          schema:
            type: object
            properties:
              id chat:
                type: string
              name:
                type: string
              message:
                type: array
              users:
                type: array
    get:
      tags:
        - Chat
      summary: Get all chats
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
               id owner:
                 type: string
      security:
        - teacher: []
      responses:
        "200":
          description: Chat Acquired Successfully 
          schema:
            type: object
            properties:
              id chat:
                type: string
              name:
                type: string
              message:
                type: array
              users:
                type: array
    delete:
      tags:
        - Chat
      summary: Delete all chats
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
               Confirm:
                 type: string
      security:
        - teacher: []
      responses:
        "204":
          description: All chats removed
    
  /chat/:{id}:
     get:
      tags:
        - Chat
      summary: Get chats by ID
      parameters:
        - name: id
          in: path
          description: ID of the chat
          required: true
          type: string
      security:
        - teacher: []
      responses:
        "200":
          description: Chats Acquired Successfully 
          schema:
            type: object
            properties:
              name:
                type: string
              message:
                type: array
              users:
                type: array
     put:
      tags:
        - Chat
      summary: Update chat by ID
      parameters:
        - name: id
          in: path
          description: ID of chat to update
          required: true
          type: string
        - name: body
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
      security:
        - teacher: []
      responses:
        "200":
          description: chat updated successfully
          schema:
            type: object
            properties:
              id chat:
                type: string
              name:
                type: string
     delete:
      tags:
        - Chat
      summary: Delete chat by ID
      parameters:
        - name: id
          in: path
          description: ID of chat to delete
          required: true
          type: string
      security:
        - teacher: []
      responses:
        "204":
          description: chat removed successfully
          schema:
            type: object
            properties:
              id chat:
                type: string
              name:
                type: string
              message:
                type: array
              users:
                type: array 
  
  /chat/:{chatId}/participant/:{userId}:
    post:
      tags:
        - Chat
      summary: Add a new partecipant to a chat
      parameters:
        - name: chatId
          in: path
          description: ID of chat
          required: true
          type: string
        - name: userId
          in: path
          description: ID of user
          required: true
          type: string
      security:
        - teacher: []
      responses:
        "201":
          description: Participant added to chat
  
    delete:
      tags:
        - Chat
      summary: Remove a partecipant from a chat
      parameters:
        - name: chatId
          in: path
          description: ID of chat
          required: true
          type: string
        - name: userId
          in: path
          description: ID of user
          required: true
          type: string
      security:
        - teacher: []
      responses:
        "201":
          description: Participant removed from chat

  /message:
     get:
      tags:
        - Message
      summary: Get all message
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              ChatId:
                type: string
      security:
        - teacher: []
      responses:
        200:
          description: Messages Acquired Successfully 
          schema:
            type: object
            properties:
              id:
                type: string
              messageType:
                type: string
              chatId:
                type: string
     put:
      tags:
        - Message
      summary: Update chat by ID
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
      security:
        - teacher: []
      responses:
        "200":
          description: chat updated successfully
          schema:
            type: object
            properties:
              id chat:
                type: string
              name:
                type: string
     delete:
      tags:
        - Message
      summary: Delete chat by ID

      security:
        - teacher: []
      responses:
        "204":
          description: chat removed successfully
          schema:
            type: object
            properties:
              id chat:
                type: string
              name:
                type: string
              message:
                type: array
              users:
                type: array   

  
securityDefinitions:
  teacher:
    type: apiKey
    name: Authorization
    in: header
    description: Requires teacher authorization to access this endpoint.
  Admin:
    type: apiKey
    name: Authorization
    in: header
    description: Requires Admin authorization to access this endpoint